{"ast":null,"code":"//const {currentUser, apiUrl, mockData, simDataLoadingTime} = config\nimport { createContext, useEffect, useState } from \"react\";\nimport { USER_MAIN_DATA as usersMocked, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from '../src/dataMocked';\nconst mockData = true;\nlet currentUser = 12;\n/**\r\n * Context\r\n */\n\nexport const DashboardContext = /*#__PURE__*/createContext();\n/**\r\n * State\r\n */\n\nconst [user, setUser] = useState(12);\nconst [activity, setActivity] = useState();\nconst [averageSessions, setAverageSessions] = useState();\nconst [performance, setPerformance] = useState();\nconst [performanceKind, setPerformanceKind] = useState();\nconst [apiError, setApiError] = useState(false);\n/**\r\n * Get user data\r\n */\n\nconst getUser = () => {\n  if (!mockData) fetch(`${apiUrl}/user/${currentUser}`).then(response => response.json()).then(data => setUser(data.data)).catch(error => setApiError(true));else setUser(usersMocked.find(item => item.id === currentUser));\n};\n\nuseEffect(() => {\n  getUser();\n}, []);","map":{"version":3,"sources":["D:/fomation Openclassroom/projet12/SportSee/src/dashboardContext.js"],"names":["createContext","useEffect","useState","USER_MAIN_DATA","usersMocked","USER_ACTIVITY","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","mockData","currentUser","DashboardContext","user","setUser","activity","setActivity","averageSessions","setAverageSessions","performance","setPerformance","performanceKind","setPerformanceKind","apiError","setApiError","getUser","fetch","apiUrl","then","response","json","data","catch","error","find","item","id"],"mappings":"AAAA;AACA,SAAQA,aAAR,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,SAAQC,cAAc,IAAIC,WAA1B,EAAuCC,aAAvC,EAAsDC,qBAAtD,EAA6EC,gBAA7E,QAAqG,mBAArG;AAEA,MAAMC,QAAQ,GAAG,IAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,gBAAGV,aAAa,EAAtC;AAEP;AACA;AACA;;AACA,MAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;AACA,MAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,EAAtD;AACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,EAA9C;AACA,MAAM,CAACiB,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,EAAtD;AACA,MAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AACA;AACA;AACA;;AACA,MAAMqB,OAAO,GAAG,MAAM;AAClB,MAAI,CAACf,QAAL,EAAegB,KAAK,CAAE,GAAEC,MAAO,SAAQhB,WAAY,EAA/B,CAAL,CACViB,IADU,CACJC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADR,EAEVF,IAFU,CAELG,IAAI,IAAIjB,OAAO,CAACiB,IAAI,CAACA,IAAN,CAFV,EAGVC,KAHU,CAGHC,KAAD,IAAWT,WAAW,CAAC,IAAD,CAHlB,EAAf,KAIKV,OAAO,CAACR,WAAW,CAAC4B,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYzB,WAAvC,CAAD,CAAP;AACR,CAND;;AAQAR,SAAS,CAAC,MAAM;AACZsB,EAAAA,OAAO;AACV,CAFQ,EAEN,EAFM,CAAT","sourcesContent":["//const {currentUser, apiUrl, mockData, simDataLoadingTime} = config\r\nimport {createContext, useEffect, useState} from \"react\";\r\nimport {USER_MAIN_DATA as usersMocked, USER_ACTIVITY, USER_AVERAGE_SESSIONS, USER_PERFORMANCE } from '../src/dataMocked'\r\n\r\nconst mockData = true;\r\nlet currentUser = 12;\r\n/**\r\n * Context\r\n */\r\nexport const DashboardContext = createContext()\r\n\r\n/**\r\n * State\r\n */\r\nconst [user, setUser] = useState(12)\r\nconst [activity, setActivity] = useState()\r\nconst [averageSessions, setAverageSessions] = useState()\r\nconst [performance, setPerformance] = useState()\r\nconst [performanceKind, setPerformanceKind] = useState()\r\nconst [apiError, setApiError] = useState(false)\r\n/**\r\n * Get user data\r\n */\r\nconst getUser = () => {\r\n    if (!mockData) fetch(`${apiUrl}/user/${currentUser}`)\r\n        .then((response => response.json()))\r\n        .then(data => setUser(data.data))\r\n        .catch((error) => setApiError(true))\r\n    else setUser(usersMocked.find((item) => item.id === currentUser))\r\n}\r\n\r\nuseEffect(() => {\r\n    getUser()\r\n}, [])\r\n"]},"metadata":{},"sourceType":"module"}