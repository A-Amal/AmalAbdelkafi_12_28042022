{"ast":null,"code":"var _jsxFileName = \"D:\\\\fomation Openclassroom\\\\projet12\\\\SportSee\\\\src\\\\page\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport data from '../dataMocked';\nimport Activity from \"../components/Activity\";\nimport '../styles/Home.css';\nimport AverageSessions from \"../components/AverageSessions\";\nimport Performance from \"../components/Performance\";\nimport Score from \"../components/Score\";\nimport Stat from \"../components/Stat\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DashboardContext, getUser, getUserActivity, getUserAverageSessions, getUserPerformance } from \"../Service\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const params = useParams();\n  let user, activity, sessions, performance;\n  const [userApi, setUserApi] = useState();\n  const [activityApi, setActivityApi] = useState();\n  const [sessionsApi, setSessionsApi] = useState();\n  const [performanceApi, setPerformanceApi] = useState();\n  const [apiError, setApiError] = useState(false);\n  /*\r\n  let userMock setUserApi= data.USER_MAIN_DATA.find(x => x.id === 12)\r\n  let activityMock setActivityApi= data.USER_ACTIVITY.find(x => x.userId === userMock.id)\r\n  let sessionsMock setAverageSessionsApi= data.USER_AVERAGE_SESSIONS.find(x => x.userId === userMock.id)\r\n  let performanceMock setPerformanceApi= data.USER_PERFORMANCE.find(x => x.userId === userMock.id)\r\n  */\n\n  console.log(process.env.REACT_APP_USE_API);\n\n  if (!process.env.REACT_APP_USE_API) {\n    setUserApi(data.USER_MAIN_DATA.find(x => x.id === 12));\n    setActivityApi(data.USER_ACTIVITY.find(x => x.userId === userApi.id));\n    setSessionsApi(data.USER_AVERAGE_SESSIONS.find(x => x.userId === userApi.id));\n    setPerformanceApi(data.USER_PERFORMANCE.find(x => x.userId === userApi.id));\n  }\n\n  useEffect(() => {\n    if (!process.env.REACT_APP_USE_API) return;else {\n      getUser(params.id).then(setUserApi);\n      getUserActivity(params.id).then(setActivityApi);\n      getUserAverageSessions(params.id).then(setSessionsApi);\n      getUserPerformance(params.id).then(setPerformanceApi);\n    }\n  }, []);\n  console.log(userApi);\n  console.log(activityApi);\n  console.log(sessionsApi);\n  console.log(performanceApi);\n  /*\r\n  if(process.env.REACT_APP_USE_API){\r\n      user = userApi;\r\n      activity = activityApi;\r\n      sessions = sessionsApi;\r\n      performance = performanceApi\r\n  }else{\r\n      user = userMock\r\n      activity = activityMock;\r\n      sessions = sessionsMock;\r\n      performance = performanceMock\r\n  }*/\n\n  console.log(user);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: [\"Bonjour \", user && user.userInfos.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-secondary\",\n        children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-activity-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-activity\",\n          children: activity && /*#__PURE__*/_jsxDEV(Activity, {\n            data: activity.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-sessions-performance-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-average-sessions\",\n            children: sessions && /*#__PURE__*/_jsxDEV(AverageSessions, {\n              data: sessions.sessions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-performance\",\n            children: performance && /*#__PURE__*/_jsxDEV(Performance, {\n              data: performance.data,\n              kind: performance.kind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-score\",\n            children: user && /*#__PURE__*/_jsxDEV(Score, {\n              data: user.score || user.todayScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: user && /*#__PURE__*/_jsxDEV(Stat, {\n          data: user.keyData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Home, \"t+eRCcHJsBDFnZA5iOMoQtSh6ik=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/fomation Openclassroom/projet12/SportSee/src/page/Home.js"],"names":["data","Activity","AverageSessions","Performance","Score","Stat","useContext","useEffect","useState","DashboardContext","getUser","getUserActivity","getUserAverageSessions","getUserPerformance","useParams","Home","params","user","activity","sessions","performance","userApi","setUserApi","activityApi","setActivityApi","sessionsApi","setSessionsApi","performanceApi","setPerformanceApi","apiError","setApiError","console","log","process","env","REACT_APP_USE_API","USER_MAIN_DATA","find","x","id","USER_ACTIVITY","userId","USER_AVERAGE_SESSIONS","USER_PERFORMANCE","then","userInfos","firstName","kind","score","todayScore","keyData"],"mappings":"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","sourcesContent":["\r\nimport data from '../dataMocked'\r\nimport Activity from \"../components/Activity\";\r\nimport '../styles/Home.css'\r\nimport AverageSessions from \"../components/AverageSessions\";\r\nimport Performance from \"../components/Performance\";\r\nimport Score from \"../components/Score\";\r\nimport Stat from \"../components/Stat\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {DashboardContext, getUser, getUserActivity, getUserAverageSessions, getUserPerformance} from \"../Service\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nfunction Home(){\r\n    const params = useParams()\r\n    let user, activity, sessions, performance;\r\n    const [userApi, setUserApi] = useState()\r\n    const [activityApi, setActivityApi] = useState()\r\n    const [sessionsApi, setSessionsApi] = useState()\r\n    const [performanceApi, setPerformanceApi] = useState()\r\n    const [apiError, setApiError] = useState(false)\r\n    /*\r\n    let userMock setUserApi= data.USER_MAIN_DATA.find(x => x.id === 12)\r\n    let activityMock setActivityApi= data.USER_ACTIVITY.find(x => x.userId === userMock.id)\r\n    let sessionsMock setAverageSessionsApi= data.USER_AVERAGE_SESSIONS.find(x => x.userId === userMock.id)\r\n    let performanceMock setPerformanceApi= data.USER_PERFORMANCE.find(x => x.userId === userMock.id)\r\n    */\r\n\r\n    console.log(process.env.REACT_APP_USE_API)\r\n    if(!process.env.REACT_APP_USE_API){\r\n        setUserApi( data.USER_MAIN_DATA.find(x => x.id === 12))\r\n        setActivityApi( data.USER_ACTIVITY.find(x => x.userId === userApi.id))\r\n        setSessionsApi(data.USER_AVERAGE_SESSIONS.find(x => x.userId === userApi.id))\r\n        setPerformanceApi( data.USER_PERFORMANCE.find(x => x.userId === userApi.id))\r\n    }\r\n    useEffect(() => {\r\n        if(!process.env.REACT_APP_USE_API) return\r\n        else{\r\n            getUser(params.id).then(setUserApi)\r\n            getUserActivity(params.id).then(setActivityApi)\r\n            getUserAverageSessions(params.id).then(setSessionsApi)\r\n            getUserPerformance(params.id).then(setPerformanceApi)\r\n        }\r\n\r\n    }, [])\r\n    console.log(userApi)\r\n    console.log(activityApi)\r\n    console.log(sessionsApi)\r\n    console.log(performanceApi)\r\n    /*\r\n    if(process.env.REACT_APP_USE_API){\r\n        user = userApi;\r\n        activity = activityApi;\r\n        sessions = sessionsApi;\r\n        performance = performanceApi\r\n    }else{\r\n        user = userMock\r\n        activity = activityMock;\r\n        sessions = sessionsMock;\r\n        performance = performanceMock\r\n    }*/\r\n    console.log(user)\r\n\r\n\r\n    return(\r\n            <section className=\"homepage\">\r\n                        <header className=\"section-header\">\r\n                            <h1 className=\"section-title\">Bonjour {user && user.userInfos.firstName}</h1>\r\n                            <p className=\"section-secondary\">Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n                        </header>\r\n                        <div className=\"homepage-grid\">\r\n                            <div className=\"chart-activity-stats\">\r\n                                <div className=\"chart-activity\">\r\n                                    {activity && <Activity data={activity.sessions}/>}\r\n                                </div>\r\n                                <div className=\"chart-sessions-performance-score\">\r\n                                    <div className=\"chart-average-sessions\">\r\n                                        {sessions && <AverageSessions data={sessions.sessions}/>}\r\n                                    </div>\r\n                                    <div className=\"chart-performance\">\r\n                                        {performance && <Performance data={performance.data}  kind={performance.kind}/>}\r\n                                    </div>\r\n                                    <div className=\"chart-score\">\r\n                                        {user && <Score data={user.score||user.todayScore}/>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"stats\">\r\n                                {user && <Stat data={user.keyData}/>}\r\n                            </div>\r\n                        </div>\r\n            </section>\r\n\r\n    )\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}