{"ast":null,"code":"var _jsxFileName = \"D:\\\\fomation Openclassroom\\\\projet12\\\\SportSee\\\\src\\\\page\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport data from '../dataMocked';\nimport Activity from \"../components/Activity\";\nimport '../styles/Home.css';\nimport AverageSessions from \"../components/AverageSessions\";\nimport Performance from \"../components/Performance\";\nimport Score from \"../components/Score\";\nimport Stat from \"../components/Stat\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DashboardContext, getUser, getUserActivity, getUserAverageSessions, getUserPerformance } from \"../Service\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const params = useParams();\n  const [userApi, setUserApi] = useState();\n  const [activityApi, setActivityApi] = useState();\n  const [averageSessionsApi, setAverageSessionsApi] = useState();\n  const [performanceApi, setPerformanceApi] = useState();\n  const [performanceKindApi, setPerformanceKindApi] = useState();\n  const [apiError, setApiError] = useState(false);\n  let user = data.USER_MAIN_DATA.find(x => x.id === 12);\n  let activity = data.USER_ACTIVITY.find(x => x.userId === user.id);\n  let sessions = data.USER_AVERAGE_SESSIONS.find(x => x.userId === user.id);\n  let performance = data.USER_PERFORMANCE.find(x => x.userId === user.id);\n  useEffect(() => {\n    getUser(params.id).then(setUserApi);\n    getUserActivity(params.id).then(setActivityApi);\n    getUserAverageSessions(params.id).then(setAverageSessionsApi);\n    getUserPerformance(params.id).then(setPerformanceApi);\n  }, []);\n  console.log(userApi);\n  console.log(activityApi);\n  console.log(averageSessionsApi);\n  console.log(performanceApi);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: [\"Bonjour \", user.userInfos.firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-secondary\",\n        children: \"F\\xE9licitation ! Vous avez explos\\xE9 vos objectifs hier \\uD83D\\uDC4F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homepage-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-activity-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-activity\",\n          children: /*#__PURE__*/_jsxDEV(Activity, {\n            data: activity.sessions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-sessions-performance-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-average-sessions\",\n            children: /*#__PURE__*/_jsxDEV(AverageSessions, {\n              data: sessions.sessions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-performance\",\n            children: /*#__PURE__*/_jsxDEV(Performance, {\n              data: performance.data,\n              kind: performance.kind\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-score\",\n            children: /*#__PURE__*/_jsxDEV(Score, {\n              data: user.score || user.todayScore\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: /*#__PURE__*/_jsxDEV(Stat, {\n          data: user.keyData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Home, \"fD5nYIDnQ6yUW+s7nuNYvQWQtSk=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/fomation Openclassroom/projet12/SportSee/src/page/Home.js"],"names":["data","Activity","AverageSessions","Performance","Score","Stat","useContext","useEffect","useState","DashboardContext","getUser","getUserActivity","getUserAverageSessions","getUserPerformance","useParams","Home","params","userApi","setUserApi","activityApi","setActivityApi","averageSessionsApi","setAverageSessionsApi","performanceApi","setPerformanceApi","performanceKindApi","setPerformanceKindApi","apiError","setApiError","user","USER_MAIN_DATA","find","x","id","activity","USER_ACTIVITY","userId","sessions","USER_AVERAGE_SESSIONS","performance","USER_PERFORMANCE","then","console","log","userInfos","firstName","kind","score","todayScore","keyData"],"mappings":"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","sourcesContent":["\r\nimport data from '../dataMocked'\r\nimport Activity from \"../components/Activity\";\r\nimport '../styles/Home.css'\r\nimport AverageSessions from \"../components/AverageSessions\";\r\nimport Performance from \"../components/Performance\";\r\nimport Score from \"../components/Score\";\r\nimport Stat from \"../components/Stat\";\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {DashboardContext, getUser, getUserActivity, getUserAverageSessions, getUserPerformance} from \"../Service\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nfunction Home(){\r\n    const params = useParams()\r\n    const [userApi, setUserApi] = useState()\r\n    const [activityApi, setActivityApi] = useState()\r\n    const [averageSessionsApi, setAverageSessionsApi] = useState()\r\n    const [performanceApi, setPerformanceApi] = useState()\r\n    const [performanceKindApi, setPerformanceKindApi] = useState()\r\n    const [apiError, setApiError] = useState(false)\r\n    let user = data.USER_MAIN_DATA.find(x => x.id === 12)\r\n    let activity = data.USER_ACTIVITY.find(x => x.userId === user.id)\r\n    let sessions = data.USER_AVERAGE_SESSIONS.find(x => x.userId === user.id)\r\n    let performance = data.USER_PERFORMANCE.find(x => x.userId === user.id)\r\n    useEffect(() => {\r\n        getUser(params.id).then(setUserApi)\r\n        getUserActivity(params.id).then(setActivityApi)\r\n        getUserAverageSessions(params.id).then(setAverageSessionsApi)\r\n        getUserPerformance(params.id).then(setPerformanceApi)\r\n    }, [])\r\n    console.log(userApi)\r\n    console.log(activityApi)\r\n    console.log(averageSessionsApi)\r\n    console.log(performanceApi)\r\n\r\n    return(\r\n\r\n            <section className=\"homepage\">\r\n                        <header className=\"section-header\">\r\n                            <h1 className=\"section-title\">Bonjour {user.userInfos.firstName}</h1>\r\n                            <p className=\"section-secondary\">Félicitation ! Vous avez explosé vos objectifs hier 👏</p>\r\n                        </header>\r\n                        <div className=\"homepage-grid\">\r\n                            <div className=\"chart-activity-stats\">\r\n                                <div className=\"chart-activity\">\r\n                                    <Activity data={activity.sessions}/>\r\n                                </div>\r\n                                <div className=\"chart-sessions-performance-score\">\r\n                                    <div className=\"chart-average-sessions\">\r\n                                       <AverageSessions data={sessions.sessions}/>\r\n                                    </div>\r\n                                    <div className=\"chart-performance\">\r\n                                        <Performance data={performance.data}  kind={performance.kind}/>\r\n                                    </div>\r\n                                    <div className=\"chart-score\">\r\n                                        <Score data={user.score||user.todayScore}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"stats\">\r\n                                <Stat data={user.keyData}/>\r\n                            </div>\r\n                        </div>\r\n            </section>\r\n\r\n    )\r\n}\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}